name: Build and Deploy

on:
  push:
    branches: [main]
    tags:
      - "v*" # Run on version tags (v1.0.0, etc.)
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

env:
  NODE_VERSION: "20"

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Type check
        run: npm run check

      - name: Lint
        run: npm run lint

  build:
    needs: validate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build
        env:
          GITHUB_PAGES: true
        run: npm run build

      - name: Cache build output
        uses: actions/cache@v4
        with:
          path: dist
          key: ${{ runner.os }}-build-${{ hashFiles('**/package-lock.json') }}

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "./dist"

      - name: Upload build artifact for release
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: ./dist
          retention-days: 5

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  release:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Download dist artifact
        uses: actions/download-artifact@v4
        with:
          name: dist-files
          path: dist

      - name: Generate changelog
        id: changelog
        uses: actions/github-script@v7
        with:
          script: |
            const { data: commits } = await github.rest.repos.compareCommits({
              owner: context.repo.owner,
              repo: context.repo.repo,
              base: 'main',
              head: context.sha
            });
            const changelog = commits.commits
              .map(commit => `- ${commit.commit.message}`)
              .join('\n');
            return changelog;

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: |
            dist/*
          body: |
            # Release ${{ github.ref_name }}

            ## Changes
            ${{ steps.changelog.outputs.result }}

            ## Doppler Effect Simulation
            An interactive simulation of the Doppler Effect using SceneryStack.
